q
c
current_pos
s
exit
self.board[current_potential]
self.board[current_potential].is_a?(NullPiece)
current_potential
n
current_potential
current_pos
n
current_pos
dy
dx
s
exit
dy
dx
potential_moves
n
q
self.board[current_potential].is_a?(NullPiece)
potential_moves
current_potential
dy
dx
self.board[current_potential].is_a?(NullPiece)
move_diffs
self.board[current_potential]
s
self
    a.board[[4,4]].movesself
    a.render
    a.board.move([0,4],[4,4])
q
n
potential_moves
s
    a.board[[4,4]].moves
    a.render
    a.board.move([0,4],[4,4])
c
n
s
potential_moves
n
s
q
    a.board[[4,4]].moves
    a.render
    a.board.move([0,4],[4,4])
exit
n
    a.rendern
exit
p
b
s
self.board[[i,j]]
  n
exit
board[i][j]
display j
display i
i
    n
exit
    a.render
q
self[end_pos]
board
board[start_pos]
board[end_pos]
end_pos
board[4][0]
board[4][0].is_a?(NullPiece)
board[4][0]
board[4,0]
board[[4,0]]
board[end_pos]
valid_move?(end_pos)
s
end_pos
